name: CI/CD Pipeline for Python Flask App with Docker and Kubernetes

# Trigger the workflow on push to the main branch
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image
        run: |
          docker build -t my-python-app .

      # Push the image to Docker Hub or GitHub Container Registry
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Tag Docker image
        run: |
          docker tag my-python-app:latest ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest

  deploy:
  runs-on: ubuntu-latest
  needs: build
  
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Create kubeconfig directory and set config
    - name: Create kubeconfig directory and set config
      run: |
        mkdir -p ~/.kube
        echo "***" > ~/.kube/config

    # Set up kubectl to interact with Kubernetes
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        kubectl-version: 'latest'
        
    - name: Configure Kubernetes credentials
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
        
    # Deploy to Kubernetes
    - name: Deploy Docker container to Kubernetes
      run: |
        kubectl set image deployment/my-python-app my-python-app=${{ secrets.DOCKER_USERNAME }}/my-python-app:latest
        kubectl rollout status deployment/my-python-app

